server:
  port: 6900
spring: 
  cloud: 
    config: 
      profile: dev 
      label: master
      discovery: 
        enabled: true
        service-id:  config-server
  application:
    name: microservice-bookmark
  zipkin:
    base-url: http://localhost:9411
    #使用默认 http 方式收集 span 需要配置此项
    sender: 
      type: rabbit   #rabbit 使用 rabbitmq 来向 zipkin 发送数据
  sleuth: 
    sampler:  
      probability: 1.0
  rabbitmq: 
    host: localhost
    port: 5672
    username: hoob
    password: zhuqinhe
  data: 
    mongodb: 
      uri: mongodb://localhost:27017/favorite
      option: 
        min-connection-per-host: 0
        max-connection-per-host: 10
        max-wait-time: 10000
        connect-timeout : 30000
logging:
  level:
    root: INFO
    com.test: DEBUG
eureka:
  client:
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://hoob:hoobzhu@localhost:8761/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
    lease-renewal-interval-in-seconds: 30 #eureka客户端需要向eureka服务器发送心跳以指示它仍然存在的频率（以秒为单位）默认30 ，生成环境不建议修改    
    # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
    # 默认为90秒
    # 如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
    # 如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
    # 该值至少应该大于 leaseRenewalIntervalInSeconds
    lease-expiration-duration-in-seconds: 10    
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 5000
#代码里面暴露/hystrix.stream
management:                  
  endpoints: 
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always        
profile: hoob-dev
